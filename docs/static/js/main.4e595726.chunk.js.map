{"version":3,"sources":["App.module.css","../../src/index.tsx","App.tsx","index.tsx"],"names":["module","exports","Draggable","state","dragging","position","x","y","relativePosition","onMouseDown","event","offset","onMouseUp","onMouseMove","prevState","xPosition","yPosition","maxXPosition","window","maxYPosition","React","componentDidUpdate","this","document","render","props","style","left","top","ref","elementRef","childrenWithProps","child","isValidElement","cloneElement","App","initialPosition","className","classes","MyDiv","ReactDOM","getElementById"],"mappings":"mHACAA,EAAOC,QAAU,CAAC,MAAQ,qB,0ICEbC,EAAb,Y,QASI,c,iBACI,wBATJC,MAAQ,CACJC,UADI,EAEJC,SAAU,CAAEC,EAAF,EAAQC,EAAG,GACrBC,iBAAkB,CAAEF,EAAF,EAAQC,EAAG,IA0BjC,EAAAE,YAAc,Y,QACV,OAAIC,SAAJ,CAEA,IAAMC,GACI,kEADK,EAATA,GAEG,iEAAsC,EAG/C,WAAc,CACVP,UADU,EAEVI,iBAAkB,CACdF,EAAGI,QAAcC,EACjBJ,EAAGG,QAAcC,KAIzBD,sBAGJ,EAAAE,UAAY,YACR,WAAc,CAAER,UAAU,IAE1BM,oBACAA,oBAGJ,EAAAG,YAAc,YACL,QAAL,WAEA,YAAc,SAAAC,G,QACJC,EAAYL,QAAcI,mBAAhC,EACME,EAAYN,QAAcI,mBAAhC,EACMG,EAAeC,oBAAqB,mEAA1C,GACMC,EAAeD,qBAAsB,oEAA3C,GAKA,MAAO,CACHb,SAAU,CACNC,EALaS,KAAiBA,EAAjBA,EAA4CL,QAAcI,mBAA1DC,EAAyFD,WAA9G,EAMQP,EALaS,KAAiBA,EAAjBA,EAA4CN,QAAcI,mBAA1DE,EAAyFF,WAA9G,OAUJJ,oBACAA,qBAjEA,aAAkBU,IAAlB,YAEA,iBAAsB,CAClBd,GAAG,4DADe,EAElBC,GAAG,4DAAiC,G,IAhBhD,G,EAAA,G,6EAAA,8CAoBIc,cACQC,KAAKnB,MAAMC,WAAaD,EAA5B,UACIoB,sCAAuCD,KAAvCC,aACAA,oCAAqCD,KAArCC,aACQD,KAAKnB,MAAN,UAAwBA,EAA5B,WACHoB,yCAA0CD,KAA1CC,aACAA,uCAAwCD,KAAxCC,aA1BZ,SAgFIC,WACI,IAAMC,EAAQ,CACVhB,YAAaa,KADH,YAEVI,MAAO,CACHrB,SADG,WAEHsB,KAASL,KAAKnB,MAAME,SAAhB,EAFD,KAGHuB,IAAQN,KAAKnB,MAAME,SAAhB,QAEPwB,IAAKP,KAAKQ,YAERC,EAAoB,eAAaT,KAAKG,MAAlB,UAAkC,SAAAO,GACxD,OAAIC,yBAAJ,GACWC,uBAAaF,EAApB,GAGJ,KAEJ,OACIZ,kCADJ,IAjGR,gB,gBCWee,EAVH,WACV,OACE,kBAAC,EAAD,CAAWC,gBAAiB,CAAE9B,EAAG,IAAKC,EAAG,MACvC,yBAAK8B,UAAWC,IAAQC,OAAxB,aCDNC,IAAShB,OAAO,kBAAC,EAAD,MAASD,SAASkB,eAAe,W","file":"static/js/main.4e595726.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyDiv\":\"App_MyDiv__1_K8t\"};","import React, { Component, RefObject, Children, isValidElement, cloneElement, Fragment } from 'react';\nimport { DraggableProps, DraggableState } from './index.model';\n\nexport class Draggable extends Component<DraggableProps, DraggableState> {\n    state = {\n        dragging: false,\n        position: { x: 0, y: 0 },\n        relativePosition: { x: 0, y: 0}\n    };\n\n    elementRef: RefObject<HTMLDivElement>;\n\n    constructor(props: DraggableProps) {\n        super(props);\n\n        this.elementRef = React.createRef();\n\n        this.state.position = {\n            x: this.props.initialPosition?.x || 0,\n            y: this.props.initialPosition?.y || 0\n        };\n    }\n\n    componentDidUpdate(_props: DraggableProps, state: DraggableState) {\n        if (this.state.dragging && !state.dragging) {\n            document.addEventListener('mousemove', this.onMouseMove);\n            document.addEventListener('mouseup', this.onMouseUp);\n        } else if (!this.state.dragging && state.dragging) {\n            document.removeEventListener('mousemove', this.onMouseMove);\n            document.removeEventListener('mouseup', this.onMouseUp);\n        }\n    }\n\n    onMouseDown = (event: MouseEvent) => {\n        if (event.button !== 0) return; // only left mouse button allowed\n\n        const offset = {\n            left: this.elementRef.current?.offsetLeft || 0,\n            top: this.elementRef.current?.offsetTop || 0\n        };\n\n        this.setState({\n            dragging: true,\n            relativePosition: {\n                x: event.pageX - offset.left,\n                y: event.pageY - offset.top\n            }\n        });\n\n        event.stopPropagation();\n    }\n\n    onMouseUp = (event: MouseEvent) => {\n        this.setState({ dragging: false });\n\n        event.stopPropagation();\n        event.preventDefault();\n    }\n\n    onMouseMove = (event: MouseEvent) => {\n        if (!this.state.dragging) return;\n\n        this.setState(prevState => {\n            const xPosition = event.pageX - prevState.relativePosition.x;\n            const yPosition = event.pageY - prevState.relativePosition.y;\n            const maxXPosition = window.innerWidth - (this.elementRef.current?.clientWidth || 0);\n            const maxYPosition = window.innerHeight - (this.elementRef.current?.clientHeight || 0);\n\n            const newXPosition = xPosition > 0 && xPosition < maxXPosition ? event.pageX - prevState.relativePosition.x : prevState.position.x;\n            const newYPosition = yPosition > 0 && yPosition < maxYPosition ? event.pageY - prevState.relativePosition.y : prevState.position.y;\n            \n            return {\n                position: {\n                    x: newXPosition,\n                    y: newYPosition\n                }\n            };\n        });\n\n        event.stopPropagation();\n        event.preventDefault();\n    }\n\n    render() {\n        const props = {\n            onMouseDown: this.onMouseDown,\n            style: {\n                position: 'absolute',\n                left: `${this.state.position.x}px`,\n                top: `${this.state.position.y}px`\n            },\n            ref: this.elementRef\n        };\n        const childrenWithProps = Children.map(this.props.children, child => {\n            if (isValidElement(child)) {\n                return cloneElement(child, props);\n            }\n\n            return child;\n        });\n        return (\n            <Fragment>\n                { childrenWithProps }\n            </Fragment>\n        );\n    }\n}","import React from 'react'\nimport { Draggable } from 'z-draggable'\nimport classes from './App.module.css';\n\nconst App = () => {\n  return (\n    <Draggable initialPosition={{ x: 100, y: 100 }}>\n      <div className={classes.MyDiv}>\n        MOVE ME\n      </div>\n    </Draggable>\n  );\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}